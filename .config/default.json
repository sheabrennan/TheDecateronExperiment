{
  "notes": "5-cube is 10 cells, 40 rooms, each room exists in 2 cells.  6-cube is a whole other thing.  it's 60 cells, 160 rooms, but reflected across what is essentially *12* instances of the 5-cube. it'd require a new dimension/factor to differentiate... beyond scope right now...",
  "roomTemplate": {
    "name": "only necessary for 'managing' them, we'll put it in the 'logs' so unique names will help DMs",
    "size": [
      100,
      100,
      100,
      "not actually used for anything, could be textual description or array of dimessions, both, whatever"
    ],
    "description":{
      "default": "Narrative description for the room. ",
      "rest": "optional  if party rests in this room, what happens during/after the rest.",
      "disabled": "if party posseses the key for this room"
    }, 
    "mechanics": "Explinations for the DM, room and/or battle descriptions, ",
    "gravity": {
      "type": "enum{fixed/random/same/special} required",
      "gravity": "integer[0-5] required for fixed type, ignored for others",
      "desc": "details for anything weird, but largely just for 'special' gravity"
    },
    "badguys": [{
      "link": "link(s) to the enemy deets",
      "count": "1-??",
      "notes": "conditions for appearing, strategies, equipment/modifications, etc "
    }],
    "nokey": "true/false defaults to false.  used to keep keys out of these rooms. ie: start, end, or some special condition",
    "start": "true/false should only be one, but i _think_ it'll pick the first one",
    "exit": "true/false should oly be one, but i think it'll pick the first one",
    "orientationDC": "optional DC target to not get 'disoriented' after entering a room.",
  },
  "roomPositionList": [
    "NORTH",
    "TOP",
    "WEST",
    "INNER",
    "EAST",
    "OUTER",
    "SOUTH",
    "BOTTOM"
  ],
  "keyList": {
    "red": null,
    "orange": null,
    "yellow": null,
    "lime": null,
    "lightblue": null,
    "violet": null,
    "white": null,
    "pink": null,
    "skyblue":null,
    "tan":null
  }
  ,
  "cellCount": 10,
  "roomCount": 40,
  "cellRoomCount": 2,
  "roomCellDistro": "even",
  "cellTemplate": {
    "id": "an index for reference?",
    "name": "don't really need this",
    "color": "ambient light for all rooms in this cell, differentiates same room in different cells",
    "key": "who has it?, if null, still up for grabs"
  },
  "cellMap": [
    {
      "position": "North",
      "doors": ["Inner", "West", "Outer", "East", "Bottom", "Top"],
      "otherCell": ""
    },
    {
      "position": "Top",
      "doors": ["South", "West", "North", "East", "Inner", "Outer"],
      "otherCell": ""
    },
    {
      "position": "West",
      "doors": ["South", "Outer", "North", "Inner", "Bottom", "Top"],
      "otherCell": ""
    },
    {
      "position": "Inner",
      "doors": ["South", "West", "North", "East", "Bottom", "Top"],
      "otherCell": ""
    },
    {
      "position": "East",
      "doors": ["South", "Inner", "North", "Outer", "Bottom", "Top"],
      "otherCell": ""
    },
    {
      "position": "Outer",
      "doors": ["North", "East", "South", "West", "Top", "Bottom"],
      "otherCell": ""
    },
    {
      "position": "South",
      "doors": ["Outer", "West", "Inner", "East", "Bottom", "Top"],
      "otherCell": ""
    },
    {
      "position": "Bottom",
      "doors": ["South", "West", "North", "East", "Outer", "Inner"],
      "otherCell": ""
    }
  ],
  "initer": {
    "cells": {},
    "rooms": {},
    "name": null,
    "gameDetails": {
      "currentCell": null,
      "currentRoom": null,
      "currentEntry": null,
      "currentOpenDoorRoom": null,
      "currentOpenDoorCell": null,
      "currentDoors": [],
      "doorCounter": 0,
      "rested": false,
      "steps": 0,
      "lastCurrentCell": null,
      "lastCurrentRoom": null,
      "startCell": null,
      "startRoom": null,
      "exitCell": null,
      "exitRoom": null,
      "ticks": 0,
      "gameLog": [],
      "lexicalMap": {
        "entryGravityTuple": [
          [0, 0],
          [0, 1],
          [0, 2],
          [0, 3],
          [0, 4],
          [0, 5],
          [1, 0],
          [1, 1],
          [1, 2],
          [1, 3],
          [1, 4],
          [1, 5],
          [2, 0],
          [2, 1],
          [2, 2],
          [2, 3],
          [2, 4],
          [2, 5],
          [3, 0],
          [3, 1],
          [3, 2],
          [3, 3],
          [3, 4],
          [3, 5],
          [4, 0],
          [4, 1],
          [4, 2],
          [4, 3],
          [4, 4],
          [4, 5],
          [5, 0],
          [5, 1],
          [5, 2],
          [5, 3],
          [5, 4],
          [5, 5]
        ],
        "orientations": [
          ["Down", "Left", "Front", "Up", "Right", "Back"],
          ["Back", "Down", "Right", "Front", "Up", "Left"],
          ["Back", "Left", "Down", "Front", "Right", "Up"],
          ["Up", "Right", "Front", "Down", "Left", "Back"],
          ["Back", "Up", "Left", "Front", "Down", "Right"],
          ["Back", "Right", "Up", "Front", "Left", "Down"],
          ["Down", "Back", "Left", "Up", "Front", "Right"],
          ["Back", "Down", "Right", "Front", "Up", "Left"],
          ["Right", "Back", "Down", "Left", "Front", "Up"],
          ["Up", "Back", "Right", "Down", "Front", "Left"],
          ["Back", "Up", "Left", "Front", "Down", "Right"],
          ["Left", "Back", "Up", "Right", "Front", "Down"],
          ["Down", "Right", "Back", "Up", "Left", "Front"],
          ["Left", "Down", "Back", "Right", "Up", "Front"],
          ["Right", "Back", "Down", "Left", "Front", "Up"],
          ["Up", "Left", "Back", "Down", "Right", "Front"],
          ["Right", "Up", "Back", "Left", "Down", "Front"],
          ["Left", "Back", "Up", "Right", "Front", "Down"],
          ["Down", "Right", "Back", "Up", "Left", "Front"],
          ["Front", "Down", "Left", "Back", "Up", "Right"],
          ["Front", "Right", "Down", "Back", "Left", "Up"],
          ["Up", "Left", "Back", "Down", "Right", "Front"],
          ["Front", "Up", "Right", "Back", "Down", "Left"],
          ["Front", "Left", "Up", "Back", "Right", "Down"],
          ["Down", "Front", "Right", "Up", "Back", "Left"],
          ["Front", "Down", "Left", "Back", "Up", "Right"],
          ["Left", "Front", "Down", "Right", "Back", "Up"],
          ["Up", "Front", "Left", "Down", "Back", "Right"],
          ["Front", "Up", "Right", "Back", "Down", "Left"],
          ["Right", "Front", "Up", "Left", "Back", "Down"],
          ["Down", "Left", "Front", "Up", "Right", "Back"],
          ["Right", "Down", "Front", "Left", "Up", "Back"],
          ["Left", "Front", "Down", "Right", "Back", "Up"],
          ["Up", "Right", "Front", "Down", "Left", "Back"],
          ["Left", "Up", "Front", "Right", "Down", "Back"],
          ["Right", "Front", "Up", "Left", "Back", "Down"]
        ]
      }
    }
  }
}
